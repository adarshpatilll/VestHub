// src/service-worker.js
import { precacheAndRoute } from "workbox-precaching";
import { registerRoute } from "workbox-routing";
import { StaleWhileRevalidate, CacheFirst } from "workbox-strategies";
import { CacheableResponsePlugin } from "workbox-cacheable-response";
import { ExpirationPlugin } from "workbox-expiration";

// Precache all assets generated by Vite build
precacheAndRoute(self.__WB_MANIFEST || []);

const domain = import.meta.env.VITE_DOMAIN;

registerRoute(
   ({ url }) => url.origin === domain,
   new StaleWhileRevalidate({
      cacheName: "api-cache",
      plugins: [
         new CacheableResponsePlugin({ statuses: [0, 200] }),
         new ExpirationPlugin({ maxEntries: 50, maxAgeSeconds: 5 * 60 }),
      ],
   }),
);

// Cache images
registerRoute(
   ({ request }) => request.destination === "image",
   new CacheFirst({
      cacheName: "images-cache",
      plugins: [
         new CacheableResponsePlugin({ statuses: [0, 200] }),
         new ExpirationPlugin({
            maxEntries: 60,
            maxAgeSeconds: 30 * 24 * 60 * 60,
         }), // 30 days
      ],
   }),
);

// Offline fallback (optional)
self.addEventListener("fetch", (event) => {
   event.respondWith(
      fetch(event.request).catch(() => caches.match("/index.html")),
   );
});
